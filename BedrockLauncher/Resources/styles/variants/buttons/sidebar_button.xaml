<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="{x:Type ToggleButton}" x:Key="SideBarButtonStyle">
        <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Focusable" Value="True"></Setter>
        <Setter Property="Height" Value="59"></Setter>
        <Setter Property="Width" Value="179"></Setter>
        <Setter Property="Background" Value="{DynamicResource ButtonSide.Static.Background}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonSide.Static.Border}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ButtonSide.Static.Foreground}"></Setter>
        <Setter Property="FontFamily" Value="/BedrockLauncher;component/Resources/fonts/#Noto Sans"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Padding" Value="55,1,1,1"></Setter>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" >
                        <Border x:Name="focus_border">
                            <Grid x:Name="grid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3"></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition MaxHeight="100"></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid x:Name="selection_indicator" Focusable="False" Background="White" Grid.Column="0" Grid.Row="1"></Grid>
                                <ContentPresenter Grid.Column="1" Grid.RowSpan="3" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                       
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" Duration="0:0:0.1" To="{StaticResource ButtonSide.MouseOver.Background}" From="{StaticResource ButtonSide.MainBackground}"/>
                                        <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)" Duration="0:0:0.1" To="{StaticResource ButtonSide.MouseOver.Border}" From="{StaticResource ButtonSide.MainBackground}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" Duration="0:0:0.1" From="{StaticResource ButtonSide.MouseOver.Background}" To="{StaticResource ButtonSide.MainBackground}"/>
                                        <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)" Duration="0:0:0.1" From="{StaticResource ButtonSide.MouseOver.Border}" To="{StaticResource ButtonSide.MainBackground}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonSide.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ButtonSide.Pressed.Border}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="true">
                            <Setter Property="Background" TargetName="focus_border" Value="{DynamicResource ButtonSide.Focused.Background}"/>
                            <Setter Property="BorderBrush" TargetName="focus_border" Value="{DynamicResource ButtonSide.Focused.Border}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="selection_indicator" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="selection_indicator" Storyboard.TargetProperty="MaxHeight" Duration="0:0:0.99" To="100" From="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="selection_indicator" Storyboard.TargetProperty="MaxHeight" Duration="0:0:0.0" From="100" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>